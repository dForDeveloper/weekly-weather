{"version":3,"sources":["utils/api.js","actions/index.js","utils/dataCleaner.js","thunks/getWeather.js","containers/Search/Search.js","thunks/forwardGeocode.js","components/ForecastBar/ForecastBar.js","components/Graph/Graph.js","components/WeatherContainer/WeatherContainer.js","thunks/reverseGeocode.js","containers/App/App.js","thunks/getUserIP.js","reducers/locationReducer.js","reducers/index.js","reducers/weatherReducer.js","reducers/errorReducer.js","reducers/isLoadingReducer.js","index.js"],"names":["fetchData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","message","wrap","_context","prev","next","fetch","sent","ok","json","Error","abrupt","stop","_x","apply","this","arguments","setCoordinates","type","latitude","longitude","setCity","city","setWeather","weather","setError","toggleLoading","bool","isLoading","cleanData","_weather$currently","currently","temperature","apparentTemperature","summary","_weather$daily$data$r","daily","data","reduce","acc","day","minTemp","Math","round","min","temperatureLow","maxTemp","max","temperatureHigh","week","getWeekForecast","firstDay","shift","today","objectSpread","feelsLike","graphData","getGraphData","hourly","slice","map","forecast","icon","precipType","precipProbability","time","sunriseTime","sunsetTime","windSpeed","windBearing","humidity","Date","toDateString","low","high","sunrise","toLocaleTimeString","replace","sunset","wind","getWindDirection","hourData","id","hour","x","y","getWeather","lat","lon","_ref2","dispatch","concat","t0","Search","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","query","target","value","handleSubmit","preventDefault","state","props","forwardGeocode","inherits","createClass","key","react_default","createElement","onSubmit","className","onChange","placeholder","Component","connect","userQuery","geocodeData","_geocodeData$0$geomet","_geocodeData$0$compon","state_code","geometry","lng","components","ForecastBar","handleClick","isExpanded","_this$props","barStyle","width","marginLeft","style","onClick","Graph","yMin","yMax","line","margin","top","right","bottom","left","xScale","yScale","stacked","curve","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legendOffset","legendPosition","tickValues","axisLeft","legend","enableGridX","colors","dotSize","dotColor","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","animate","motionStiffness","motionDamping","isInteractive","WeatherContainer","Graph_Graph","index","ForecastBar_ForecastBar","assign","reverseGeocode","App","getUserIP","userLocation","location","error","redirectPath","shouldRedirect","pathname","includes","containers_Search_Search","Redirect","to","components_WeatherContainer_WeatherContainer","withRouter","initialState","rootReducer","combineReducers","length","undefined","action","devTools","composeWithDevTools","applyMiddleware","thunk","store","createStore","provider","es","BrowserRouter","containers_App_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8fc4be39.chunk.js","sourcesContent":["export const fetchData = async (url) => {\n  const response = await fetch(url);\n  if (!response.ok) {\n    const message = await response.json();\n    throw Error(message);\n  }\n  return await response.json();\n}","export const setCoordinates = ({ latitude, longitude }) => ({\n  type: 'SET_COORDINATES',\n  latitude,\n  longitude\n});\n\nexport const setCity = (city) => ({\n  type: 'SET_CITY',\n  city\n})\n\nexport const setWeather = (weather) => ({\n  type: 'SET_WEATHER',\n  weather\n});\n\nexport const setError = (message) => ({\n  type: 'SET_ERROR',\n  message\n});\n\nexport const toggleLoading = (bool) => ({\n  type: 'TOGGLE_LOADING',\n  isLoading: bool\n});","export const cleanData = (weather) => {\n  const { temperature, apparentTemperature, summary } = weather.currently;\n  const { minTemp, maxTemp } = weather.daily.data.reduce((acc, day) => {\n    acc.minTemp = Math.round(Math.min(acc.minTemp, day.temperatureLow));\n    acc.maxTemp = Math.round(Math.max(acc.maxTemp, day.temperatureHigh));\n    return acc;\n  }, { minTemp: 200, maxTemp: -200});\n  const week = getWeekForecast(weather.daily.data);\n  const firstDay = week.shift();\n  const today = {\n    ...firstDay,\n    summary,\n    temperature: Math.round(temperature),\n    feelsLike: Math.round(apparentTemperature)\n  };\n  const graphData = getGraphData(weather.hourly.data.slice(0,24));\n  return { today, week, minTemp, maxTemp, graphData };\n}\n\nexport const getWeekForecast = (data) => {\n  return data.map(forecast => {\n    const {\n      summary,\n      icon,\n      precipType,\n      precipProbability,\n      time,\n      temperatureLow,\n      temperatureHigh,\n      sunriseTime,\n      sunsetTime,\n      windSpeed,\n      windBearing,\n      humidity\n    } = forecast;\n    return {\n      summary,\n      icon,\n      precipType,\n      precipProbability: Math.round(precipProbability * 100) + '%',\n      day: (new Date(time * 1000).toDateString().slice(0,3)),\n      low: Math.round(temperatureLow),\n      high: Math.round(temperatureHigh),\n      sunrise: (new Date(sunriseTime * 1000))\n        .toLocaleTimeString('en-US').replace(/:\\d+/, ''),\n      sunset: (new Date(sunsetTime * 1000))\n        .toLocaleTimeString('en-US').replace(/:\\d+/, ''),\n      wind: Math.round(windSpeed) + ' mph ' + getWindDirection(windBearing),\n      humidity: Math.round(humidity * 100) + '%'\n    }\n  });\n}\n\nexport const getWindDirection = (windBearing) => {\n  switch (Math.round(windBearing / 22.5) % 16) {\n    case 0: return 'N';\n    case 1: return 'NNE';\n    case 2: return 'NE';\n    case 3: return 'ENE';\n    case 4: return 'E';\n    case 5: return 'ESE';\n    case 6: return 'SE';\n    case 7: return 'SSE';\n    case 8: return 'S';\n    case 9: return 'SSW';\n    case 10: return 'SW';\n    case 11: return 'WSW';\n    case 12: return 'W';\n    case 13: return 'WNW';\n    case 14: return 'NW';\n    case 15: return 'NNW';\n    default: return undefined;\n  }\n}\n\nexport const getGraphData = (hourData) => {\n  const data = hourData.map(hour => {\n    return {\n      x: (new Date(hour.time * 1000))\n        .toLocaleTimeString().replace(/:\\d+/, ''),\n      y: Math.round(hour.temperature)\n    }\n  });\n  return [{ id: \"\", data }];\n}","import { fetchData } from '../utils/api';\nimport { cleanData } from '../utils/dataCleaner';\nimport { setWeather, setError } from '../actions';\n\nexport const getWeather = ({ latitude: lat, longitude: lon }) => {\n  return async (dispatch) => {\n    try {\n      const url = `http://weekly-weather.herokuapp.com/api/v1/weather/${lat}/${lon}`;\n      const weather = await fetchData(url);\n      dispatch(setWeather(cleanData(weather)));\n      dispatch(setError(''));\n    } catch (error) {\n      dispatch(setError(error.message))      \n    }\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { forwardGeocode } from '../../thunks/forwardGeocode';\nimport PropTypes from 'prop-types';\n\nexport class Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      query: ''\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ query: event.target.value });\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    let { query } = this.state;\n    this.props.forwardGeocode(query);\n    this.setState({ query: '' });\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit} className='Search'>\n        <input\n          value={this.state.query}\n          onChange={this.handleChange}\n          placeholder='search cities'\n          className='Search--input'\n        />\n      </form>\n    );\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => ({\n  forwardGeocode: (query) => dispatch(forwardGeocode(query))\n});\n\nexport default connect(null, mapDispatchToProps)(Search);\n\nSearch.propTypes = {\n  forwardGeocode: PropTypes.func\n}","import { fetchData } from '../utils/api';\nimport { setCoordinates, setCity, setError, toggleLoading } from '../actions';\nimport { getWeather } from '../thunks/getWeather';\n\nexport const forwardGeocode = (userQuery) => {\n  return async (dispatch) => {\n    dispatch(toggleLoading(true));\n    try {\n      const query = userQuery.replace(/\\s/g, '+').replace(/,/g, '%2C');\n      const url = `http://weekly-weather.herokuapp.com/api/v1/forwardgeocode/${query}`;\n      const geocodeData = await fetchData(url);\n      const { lat: latitude, lng: longitude } = geocodeData[0].geometry;\n      const { city, state_code } = geocodeData[0].components;\n      dispatch(setCity(`${city}, ${state_code}`));\n      dispatch(setCoordinates({ latitude, longitude }));\n      dispatch(getWeather({ latitude, longitude }));\n      dispatch(setError(''));\n    } catch (error) {\n      dispatch(setError(error.message))\n    }\n    dispatch(toggleLoading(false));\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class ForecastBar extends Component {\n  constructor() {\n    super();\n    this.state = { isExpanded: false };\n  }\n\n  handleClick = () => {\n    this.setState({ isExpanded: !this.state.isExpanded });\n  }\n\n  render() {\n    const { isExpanded } = this.state;\n    const {\n      min,\n      max,\n      day,\n      summary,\n      icon,\n      precipType,\n      precipProbability,\n      low,\n      high,\n      sunrise,\n      sunset,\n      wind,\n      humidity\n    } = this.props;\n    const barStyle = {\n      width: 100 * (high - low) / (max - min) + '%',\n      marginLeft: 100 * (low - min) / (max - min) + '%'\n    }\n    return (\n      <div className=\"ForecastBar\">\n        <div className={'ForecastBar--bar-container'}>\n          <span className={icon +' small-icon'}></span>\n          <span className='day'>{day}</span>\n          <span className='bar-container'>\n            <span className='bar' style={barStyle}>\n              <span className='low'>{low}°</span>\n              <span className='high'>{high}°</span>\n            </span>\n          </span>\n          <button className='ForecastBar--button' onClick={this.handleClick}>\n            {isExpanded ? '--' : '+'}\n          </button>\n        </div>\n        {isExpanded &&\n          <article className=\"article article--expanded\">\n            <header className='article--header'>\n              <h2 className=\"h2\"><div className={icon}></div>{summary}</h2>\n              <span>Chance of {precipType}: {precipProbability}</span>\n            </header>\n            <div className=\"article--div\">\n              <p className=\"p\">Low: {low}°</p>\n              <p className=\"p\">Sunrise: {sunrise}</p>\n              <p className=\"p\">Wind: {wind}</p>\n              <p className=\"p\">High: {high}°</p>\n              <p className=\"p\">Sunset: {sunset}</p>\n              <p className=\"p\">Humidity: {humidity}</p>\n            </div>\n          </article>\n        }\n      </div>\n    );\n  }\n}\n\nForecastBar.propTypes = {\n  min: PropTypes.number,\n  max: PropTypes.number,\n  day: PropTypes.string,\n  summary: PropTypes.string,\n  icon: PropTypes.string,\n  precipType: PropTypes.string,\n  precipProbability: PropTypes.string,\n  low: PropTypes.number,\n  high: PropTypes.number,\n  sunrise: PropTypes.string,\n  sunset: PropTypes.string,\n  wind: PropTypes.string,\n  humidity: PropTypes.string\n}","import React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport PropTypes from 'prop-types';\n\nexport const Graph = ({ data, low, high }) => {\n  const yMin = Math.min(0, low);\n  const yMax = high + 20;\n  return (\n    <div className='Graph'>\n      <h3 className=\"h3\">24 Hour Forecast</h3>\n      <ResponsiveLine\n          data={data}\n          margin={{\n              \"top\": 16,\n              \"right\": 24,\n              \"bottom\": 64,\n              \"left\": 48\n          }}\n          xScale={{\n              \"type\": \"point\"\n          }}\n          yScale={{\n              \"type\": \"linear\",\n              \"stacked\": true,\n              \"min\": yMin,\n              \"max\": yMax\n          }}\n          curve=\"monotoneX\"\n          axisTop={null}\n          axisRight={null}\n          axisBottom={{\n              \"orient\": \"bottom\",\n              \"tickSize\": 5,\n              \"tickPadding\": 5,\n              \"tickRotation\": -60,\n              \"legendOffset\": 36,\n              \"legendPosition\": \"middle\",\n              \"tickValues\": 0\n          }}\n          axisLeft={{\n              \"orient\": \"left\",\n              \"tickSize\": 5,\n              \"tickPadding\": 5,\n              \"tickRotation\": 0,\n              \"legend\": \"Fahrenheit\",\n              \"legendOffset\": -32,\n              \"legendPosition\": \"middle\"\n          }}\n          enableGridX={false}\n          colors={['#4285f4']}\n          dotSize={10}\n          dotColor=\"inherit:darker(0.3)\"\n          dotBorderWidth={2}\n          dotBorderColor=\"#ffffff\"\n          enableDotLabel={true}\n          dotLabel=\"y\"\n          dotLabelYOffset={-12}\n          animate={true}\n          motionStiffness={90}\n          motionDamping={15}\n          isInteractive={false}\n      />\n    </div>\n  )\n}\n\nGraph.propTypes = {\n  data: PropTypes.array,\n  low: PropTypes.number,\n  high: PropTypes.number,\n}","import React from 'react';\nimport { ForecastBar } from '../ForecastBar/ForecastBar';\nimport { Graph } from '../Graph/Graph';\nimport PropTypes from 'prop-types';\n\nconst WeatherContainer = ({ city, weather }) => {\n  const { today, week, minTemp, maxTemp, graphData } = weather;\n  const {\n    temperature,\n    feelsLike,\n    summary,\n    icon,\n    precipType,\n    precipProbability,\n    low,\n    high,\n    sunrise,\n    sunset,\n    wind,\n    humidity\n  } = today;\n\n  return (\n    <main className=\"WeatherContainer\">\n      <article className=\"article\">\n        <header className='article--header'>\n          <h2 className=\"h2\">\n            <div className={icon}></div>\n            {temperature}° and {summary} in {city}\n          </h2>\n          <span className=\"header--span--feels\">\n            Feels like: {feelsLike}°\n          </span>\n          <span className=\"header--span--precip\">\n            Chance of {precipType}: {precipProbability}\n          </span>\n        </header>\n        <div className=\"article--div\">\n          <p className=\"p\">Low: {low}°</p>\n          <p className=\"p\">Sunrise: {sunrise}</p>\n          <p className=\"p\">Wind: {wind}</p>\n          <p className=\"p\">High: {high}°</p>\n          <p className=\"p\">Sunset: {sunset}</p>\n          <p className=\"p\">Humidity: {humidity}</p>\n\n        </div>\n      </article>\n      <Graph data={graphData} low={low} high={high} />\n      <section className=\"section\">\n        {week.map((day, index) => {\n          return (\n            <ForecastBar key={index} min={minTemp} max={maxTemp} {...day} />\n          );\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default WeatherContainer;\n\nWeatherContainer.propTypes = {\n  city: PropTypes.string,\n  weather: PropTypes.object\n}","import { fetchData } from '../utils/api';\nimport { setCity, setError } from '../actions';\n\nexport const reverseGeocode = ({ latitude: lat, longitude: lon }) => {\n  return async (dispatch) => {\n    try {\n      const url = `http://weekly-weather.herokuapp.com/api/v1/reversegeocode/${lat}/${lon}`;\n      const geocodeData = await fetchData(url);\n      const { city, state_code } = geocodeData[0].components;\n      dispatch(setCity(`${city}, ${state_code}`));\n      dispatch(setError(''));\n    } catch (error) {\n      dispatch(setError(error.message))\n    }\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport Search from '../Search/Search';\nimport WeatherContainer from '../../components/WeatherContainer/WeatherContainer';\nimport { getUserIP } from '../../thunks/getUserIP';\nimport PropTypes from 'prop-types';\n\nexport class App extends Component {\n  componentDidMount() {\n    this.props.getUserIP();\n  }\n\n  render() {\n    const { userLocation, weather, location, error, isLoading } = this.props;\n    const { city } = userLocation;\n    const redirectPath = city.replace(/\\s/g, '');\n    const shouldRedirect = !location.pathname.includes(redirectPath) && city;\n    return (\n      <div className=\"App\">\n        <header className=\"App--header\">\n          <h1 className=\"h1\">Weekly Weather</h1>\n        </header>\n        <Search />\n        {!isLoading && \n          <div>\n            {shouldRedirect && <Redirect to={redirectPath} />}\n            {weather.today && !error &&\n              <WeatherContainer city={city} weather={weather} />}\n            {error && <h2 className=\"h2--error\">No results found</h2>}\n          </div>}\n        {isLoading && <h2 className=\"h2--loading\">Loading...</h2>}\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  userLocation: state.location,\n  weather: state.weather,\n  error: state.error,\n  isLoading: state.isLoading\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  getUserIP: () => dispatch(getUserIP())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n\nApp.propTypes = {\n  userLocation: PropTypes.object,\n  weather: PropTypes.object,\n  error: PropTypes.string,\n  isLoading: PropTypes.bool,\n  getUserIP: PropTypes.func,\n}","import { fetchData } from '../utils/api';\nimport { setCoordinates, setError, toggleLoading } from '../actions';\nimport { reverseGeocode } from '../thunks/reverseGeocode';\nimport { getWeather } from '../thunks/getWeather';\n\nexport const getUserIP = () => {\n  return async (dispatch) => {\n    dispatch(toggleLoading(true));\n    try{\n      const url = 'http://ip-api.com/json';\n      const { lat: latitude, lon: longitude } = await fetchData(url);\n      dispatch(setCoordinates({ latitude, longitude }));\n      dispatch(reverseGeocode({ latitude, longitude }));\n      dispatch(getWeather({ latitude, longitude }));\n      dispatch(setError(''));\n    } catch (error) {\n      dispatch(setError(error.message));\n    }\n    dispatch(toggleLoading(false));\n  }\n}","export const initialState = {\n  latitude: null,\n  longitude: null,\n  city: ''\n}\n\nexport const locationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_COORDINATES':\n      const { latitude, longitude } = action;\n      return { ...state, latitude, longitude };\n    case 'SET_CITY':\n      const { city } = action;\n      return { ...state, city };    \n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport { locationReducer } from './locationReducer';\nimport { weatherReducer } from './weatherReducer';\nimport { errorReducer } from './errorReducer';\nimport { isLoadingReducer } from './isLoadingReducer';\n\nconst rootReducer = combineReducers({\n  location: locationReducer,\n  weather: weatherReducer,\n  error: errorReducer,\n  isLoading: isLoadingReducer\n});\n\nexport default rootReducer;","export const weatherReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_WEATHER':\n      return action.weather\n    default:\n      return state;\n  }\n}","export const errorReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_ERROR':\n      return action.message\n    default:\n      return state;\n  }\n}","export const isLoadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'TOGGLE_LOADING':\n      return action.isLoading;\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss'\nimport App from './containers/App/App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst devTools = composeWithDevTools(applyMiddleware(thunk));\nconst store = createStore(rootReducer, devTools);\nconst provider = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(provider, document.getElementById('root'));"],"sourceRoot":""}