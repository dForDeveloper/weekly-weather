{"version":3,"sources":["utils/api.js","actions/index.js","utils/dataCleaner.js","thunks/getWeather.js","containers/Search/Search.js","thunks/forwardGeocode.js","components/ForecastBar/ForecastBar.js","components/Graph/Graph.js","components/WeatherContainer/WeatherContainer.js","thunks/reverseGeocode.js","containers/App/App.js","thunks/getUserIP.js","thunks/getGeolocation.js","reducers/locationReducer.js","reducers/index.js","reducers/weatherReducer.js","reducers/errorReducer.js","reducers/isLoadingReducer.js","index.js"],"names":["fetchData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","message","wrap","_context","prev","next","fetch","sent","ok","json","Error","abrupt","stop","_x","apply","this","arguments","setCoordinates","type","latitude","longitude","setCity","city","setWeather","weather","setError","toggleLoading","bool","isLoading","cleanData","_weather$currently","currently","temperature","apparentTemperature","summary","_weather$daily$data$r","daily","data","reduce","acc","day","minTemp","Math","round","min","temperatureLow","maxTemp","max","temperatureHigh","week","getWeekForecast","firstDay","shift","today","objectSpread","feelsLike","graphData","getGraphData","hourly","slice","map","forecast","icon","precipType","precipProbability","time","sunriseTime","sunsetTime","windSpeed","windBearing","humidity","Date","toDateString","low","high","sunrise","toLocaleTimeString","replace","sunset","wind","getWindDirection","hourData","id","hour","x","y","getWeather","lat","lon","_ref2","dispatch","concat","t0","Search","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","query","target","value","handleSubmit","history","preventDefault","state","props","forwardGeocode","inherits","createClass","key","react_default","createElement","onSubmit","className","onChange","placeholder","Component","withRouter","connect","userQuery","geocodeData","_geocodeData$0$geomet","_geocodeData$0$compon","locality","state_district","state_code","cityName","geometry","lng","components","push","encodeURI","ForecastBar","handleClick","isExpanded","_this$props","barStyle","width","marginLeft","style","onClick","Graph","yMin","yMax","line","margin","top","right","bottom","left","xScale","yScale","stacked","curve","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legendOffset","legendPosition","tickValues","axisLeft","legend","enableGridX","colors","dotSize","dotColor","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","animate","motionStiffness","motionDamping","isInteractive","WeatherContainer","Graph_Graph","index","ForecastBar_ForecastBar","assign","reverseGeocode","App","_getPrototypeOf2","_len","length","args","Array","_key","getUserLocation","_callee2","getUserIP","getGeolocation","_context2","navigator","geolocation","getCurrentPosition","position","_ref3","coords","locationGranted","_this$props2","userLocation","error","containers_Search_Search","components_WeatherContainer_WeatherContainer","href","location","_ref4","initialState","rootReducer","combineReducers","undefined","action","devTools","composeWithDevTools","applyMiddleware","thunk","store","createStore","provider","es","BrowserRouter","containers_App_App","ReactDOM","render","document","getElementById"],"mappings":"4RAAaA,EAAS,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACAC,MAAMP,GADN,WACjBC,EADiBG,EAAAI,MAETC,GAFS,CAAAL,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGCL,EAASS,OAHV,aAGfR,EAHeE,EAAAI,KAIfG,MAAMT,GAJS,cAAAE,EAAAE,KAAA,GAMVL,EAASS,OANC,eAAAN,EAAAQ,OAAA,SAAAR,EAAAI,MAAA,yBAAAJ,EAAAS,SAAAd,MAAH,gBAAAe,GAAA,OAAArB,EAAAsB,MAAAC,KAAAC,YAAA,GCATC,EAAiB,SAAAzB,GAAA,MAA8B,CAC1D0B,KAAM,kBACNC,SAF4B3B,EAAG2B,SAG/BC,UAH4B5B,EAAa4B,YAM9BC,EAAU,SAACC,GAAD,MAAW,CAChCJ,KAAM,WACNI,SAGWC,EAAa,SAACC,GAAD,MAAc,CACtCN,KAAM,cACNM,YAGWC,EAAW,SAACxB,GAAD,MAAc,CACpCiB,KAAM,YACNjB,YAGWyB,EAAgB,SAACC,GAAD,MAAW,CACtCT,KAAM,iBACNU,UAAWD,YCvBAE,EAAY,SAACL,GAAY,IAAAM,EACkBN,EAAQO,UAAtDC,EAD4BF,EAC5BE,YAAaC,EADeH,EACfG,oBAAqBC,EADNJ,EACMI,QADNC,EAEPX,EAAQY,MAAMC,KAAKC,OAAO,SAACC,EAAKC,GAG3D,OAFAD,EAAIE,QAAUC,KAAKC,MAAMD,KAAKE,IAAIL,EAAIE,QAASD,EAAIK,iBACnDN,EAAIO,QAAUJ,KAAKC,MAAMD,KAAKK,IAAIR,EAAIO,QAASN,EAAIQ,kBAC5CT,GACN,CAAEE,QAAS,IAAKK,SAAU,MAJrBL,EAF4BN,EAE5BM,QAASK,EAFmBX,EAEnBW,QAKXG,EAAOC,EAAgB1B,EAAQY,MAAMC,MACrCc,EAAWF,EAAKG,QAQtB,MAAO,CAAEC,MAPE5D,OAAA6D,EAAA,EAAA7D,CAAA,GACN0D,EADM,CAETjB,UACAF,YAAaU,KAAKC,MAAMX,GACxBuB,UAAWb,KAAKC,MAAMV,KAGRgB,OAAMR,UAASK,UAASU,UADtBC,EAAajC,EAAQkC,OAAOrB,KAAKsB,MAAM,EAAE,OAIhDT,EAAkB,SAACb,GAC9B,OAAOA,EAAKuB,IAAI,SAAAC,GAAY,IAExB3B,EAYE2B,EAZF3B,QACA4B,EAWED,EAXFC,KACAC,EAUEF,EAVFE,WACAC,EASEH,EATFG,kBACAC,EAQEJ,EARFI,KACApB,EAOEgB,EAPFhB,eACAG,EAMEa,EANFb,gBACAkB,EAKEL,EALFK,YACAC,EAIEN,EAJFM,WACAC,EAGEP,EAHFO,UACAC,EAEER,EAFFQ,YACAC,EACET,EADFS,SAEF,MAAO,CACLpC,UACA4B,OACAC,aACAC,kBAAmBtB,KAAKC,MAA0B,IAApBqB,GAA2B,IACzDxB,IAAM,IAAI+B,KAAY,IAAPN,GAAaO,eAAeb,MAAM,EAAE,GACnDc,IAAK/B,KAAKC,MAAME,GAChB6B,KAAMhC,KAAKC,MAAMK,GACjB2B,QAAU,IAAIJ,KAAmB,IAAdL,GAChBU,mBAAmB,SAASC,QAAQ,OAAQ,IAC/CC,OAAS,IAAIP,KAAkB,IAAbJ,GACfS,mBAAmB,SAASC,QAAQ,OAAQ,IAC/CE,KAAMrC,KAAKC,MAAMyB,GAAa,QAAUY,EAAiBX,GACzDC,SAAU5B,KAAKC,MAAiB,IAAX2B,GAAkB,QAKhCU,EAAmB,SAACX,GAC/B,OAAQ3B,KAAKC,MAAM0B,EAAc,MAAQ,IACvC,KAAK,EAAG,MAAO,IACf,KAAK,EAAG,MAAO,MACf,KAAK,EAAG,MAAO,KACf,KAAK,EAAG,MAAO,MACf,KAAK,EAAG,MAAO,IACf,KAAK,EAAG,MAAO,MACf,KAAK,EAAG,MAAO,KACf,KAAK,EAAG,MAAO,MACf,KAAK,EAAG,MAAO,IACf,KAAK,EAAG,MAAO,MACf,KAAK,GAAI,MAAO,KAChB,KAAK,GAAI,MAAO,MAChB,KAAK,GAAI,MAAO,IAChB,KAAK,GAAI,MAAO,MAChB,KAAK,GAAI,MAAO,KAChB,KAAK,GAAI,MAAO,MAChB,QAAS,SAIAZ,EAAe,SAACwB,GAQ3B,MAAO,CAAC,CAAEC,GAAI,GAAI7C,KAPL4C,EAASrB,IAAI,SAAAuB,GACxB,MAAO,CACLC,EAAI,IAAIb,KAAiB,IAAZY,EAAKlB,MACfW,qBAAqBC,QAAQ,OAAQ,IACxCQ,EAAG3C,KAAKC,MAAMwC,EAAKnD,mBC5EZsD,EAAa,SAAA9F,GAAuC,IAA1B+F,EAA0B/F,EAApC2B,SAA0BqE,EAAUhG,EAArB4B,UAC1C,sBAAAqE,EAAAhG,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAO4F,GAAP,IAAA3F,EAAAyB,EAAA,OAAA7B,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEGL,EAFH,uDAAA4F,OAEgEJ,EAFhE,KAAAI,OAEuEH,GAFvErF,EAAAE,KAAA,EAGmBd,EAAUQ,GAH7B,OAGGyB,EAHHrB,EAAAI,KAIHmF,EAASnE,EAAWM,EAAUL,KAC9BkE,EAASjE,EAAS,KALftB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAyF,GAAAzF,EAAA,SAOHuF,EAASjE,EAAStB,EAAAyF,GAAM3F,UAPrB,yBAAAE,EAAAS,SAAAd,EAAA,iBAAP,gBAAAe,GAAA,OAAA4E,EAAA3E,MAAAC,KAAAC,YAAA,ICCW6E,EAAb,SAAAC,GACE,SAAAD,IAAc,IAAAE,EAAA,OAAAtG,OAAAuG,EAAA,EAAAvG,CAAAsB,KAAA8E,IACZE,EAAAtG,OAAAwG,EAAA,EAAAxG,CAAAsB,KAAAtB,OAAAyG,EAAA,EAAAzG,CAAAoG,GAAAM,KAAApF,QAMFqF,aAAe,SAACC,GACdN,EAAKO,SAAS,CAAEC,MAAOF,EAAMG,OAAOC,SARxBV,EAWdW,aAXc,eAAAlH,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAWC,SAAAC,EAAOuG,GAAP,IAAAE,EAAAI,EAAA,OAAAhH,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACbgG,EAAMO,iBACEL,EAAUR,EAAKc,MAAfN,MACAI,EAAYZ,EAAKe,MAAjBH,QACRZ,EAAKe,MAAMC,eAAeR,EAAOI,GACjCZ,EAAKO,SAAS,CAAEC,MAAO,KALV,wBAAApG,EAAAS,SAAAd,MAXD,gBAAAe,GAAA,OAAArB,EAAAsB,MAAAC,KAAAC,YAAA,GAEZ+E,EAAKc,MAAQ,CACXN,MAAO,IAHGR,EADhB,OAAAtG,OAAAuH,EAAA,EAAAvH,CAAAoG,EAAAC,GAAArG,OAAAwH,EAAA,EAAAxH,CAAAoG,EAAA,EAAAqB,IAAA,SAAAT,MAAA,WAqBI,OACEU,EAAAvH,EAAAwH,cAAA,QAAMC,SAAUtG,KAAK2F,aAAcY,UAAU,UAC3CH,EAAAvH,EAAAwH,cAAA,SACEX,MAAO1F,KAAK8F,MAAMN,MAClBgB,SAAUxG,KAAKqF,aACfoB,YAAY,gBACZF,UAAU,uBA3BpBzB,EAAA,CAA4B4B,aAsCbC,cAAWC,YAAQ,KAJA,SAACjC,GAAD,MAAe,CAC/CqB,eAAgB,SAACR,EAAOI,GAAR,OAAoBjB,ECrCR,SAACkC,EAAWjB,GACxC,sBAAAnH,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAO4F,GAAP,IAAAa,EAAAxG,EAAA8H,EAAAC,EAAA3G,EAAAC,EAAA2G,EAAAzG,EAAA0G,EAAAC,EAAAC,EAAAC,EAAA,OAAAxI,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLqF,EAAShE,GAAc,IADlBvB,EAAAC,KAAA,EAGGmG,EAAQqB,EAAU/C,QAAQ,MAAO,KAAKA,QAAQ,KAAM,OACpD9E,EAJH,8DAAA4F,OAIuEY,GAJvEpG,EAAAE,KAAA,EAKuBd,EAAUQ,GALjC,cAKG8H,EALH1H,EAAAI,KAAAuH,EAMuCD,EAAY,GAAGO,SAA5CjH,EANV2G,EAMKvC,IAAoBnE,EANzB0G,EAMoBO,IANpBN,EAOoDF,EAAY,GAAGS,WAA9DhH,EAPLyG,EAOKzG,KAAM0G,EAPXD,EAOWC,SAAUC,EAPrBF,EAOqBE,eAAgBC,EAPrCH,EAOqCG,WAExCxC,EAASrE,EAAO,GAAAsE,OADVwC,EAAW7G,GAAQ0G,GAAYC,EACrB,MAAAtC,OAAiBuC,KACjCxC,EAASzE,EAAe,CAAEE,WAAUC,eAVjCjB,EAAAE,KAAA,GAWGqF,EAASJ,EAAW,CAAEnE,WAAUC,eAXnC,QAYHuF,EAAQ4B,KAAK,IAAMC,UAAS,GAAA7C,OAAIuC,EAAJ,KAAAvC,OAAkBwC,KAC9CzC,EAASjE,EAAS,KAbftB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyF,GAAAzF,EAAA,SAeHuF,EAASjE,EAAStB,EAAAyF,GAAM3F,UAfrB,QAiBLyF,EAAShE,GAAc,IAjBlB,yBAAAvB,EAAAS,SAAAd,EAAA,kBAAP,gBAAAe,GAAA,OAAArB,EAAAsB,MAAAC,KAAAC,YAAA,GDoC6C+F,CAAeR,EAAOI,OAG3CgB,CAAkC9B,IEzC/C4C,EAAb,SAAA3C,GACE,SAAA2C,IAAc,IAAA1C,EAAA,OAAAtG,OAAAuG,EAAA,EAAAvG,CAAAsB,KAAA0H,IACZ1C,EAAAtG,OAAAwG,EAAA,EAAAxG,CAAAsB,KAAAtB,OAAAyG,EAAA,EAAAzG,CAAAgJ,GAAAtC,KAAApF,QAIF2H,YAAc,WACZ3C,EAAKO,SAAS,CAAEqC,YAAa5C,EAAKc,MAAM8B,cAJxC5C,EAAKc,MAAQ,CAAE8B,YAAY,GAFf5C,EADhB,OAAAtG,OAAAuH,EAAA,EAAAvH,CAAAgJ,EAAA3C,GAAArG,OAAAwH,EAAA,EAAAxH,CAAAgJ,EAAA,EAAAvB,IAAA,SAAAT,MAAA,WAUW,IACCkC,EAAe5H,KAAK8F,MAApB8B,WADDC,EAgBH7H,KAAK+F,MAbPlE,EAHKgG,EAGLhG,IACAG,EAJK6F,EAIL7F,IACAP,EALKoG,EAKLpG,IACAN,EANK0G,EAML1G,QACA4B,EAPK8E,EAOL9E,KACAC,EARK6E,EAQL7E,WACAC,EATK4E,EASL5E,kBACAS,EAVKmE,EAULnE,IACAC,EAXKkE,EAWLlE,KACAC,EAZKiE,EAYLjE,QACAG,EAbK8D,EAaL9D,OACAC,EAdK6D,EAcL7D,KACAT,EAfKsE,EAeLtE,SAEIuE,EAAW,CACfC,MAAO,KAAOpE,EAAOD,IAAQ1B,EAAMH,GAAO,IAC1CmG,WAAY,KAAOtE,EAAM7B,IAAQG,EAAMH,GAAO,KAEhD,OACEuE,EAAAvH,EAAAwH,cAAA,OAAKE,UAAU,eACbH,EAAAvH,EAAAwH,cAAA,OAAKE,UAAW,8BACdH,EAAAvH,EAAAwH,cAAA,QAAME,UAAWxD,EAAM,gBACvBqD,EAAAvH,EAAAwH,cAAA,QAAME,UAAU,OAAO9E,GACvB2E,EAAAvH,EAAAwH,cAAA,QAAME,UAAU,iBACdH,EAAAvH,EAAAwH,cAAA,QAAME,UAAU,MAAM0B,MAAOH,GAC3B1B,EAAAvH,EAAAwH,cAAA,QAAME,UAAU,OAAO7C,EAAvB,QACA0C,EAAAvH,EAAAwH,cAAA,QAAME,UAAU,QAAQ5C,EAAxB,UAGJyC,EAAAvH,EAAAwH,cAAA,UAAQE,UAAU,sBAAsB2B,QAASlI,KAAK2H,aACnDC,EAAa,KAAO,MAGxBA,GACCxB,EAAAvH,EAAAwH,cAAA,WAASE,UAAU,6BACjBH,EAAAvH,EAAAwH,cAAA,UAAQE,UAAU,mBAChBH,EAAAvH,EAAAwH,cAAA,MAAIE,UAAU,eAAcH,EAAAvH,EAAAwH,cAAA,OAAKE,UAAWxD,IAAa5B,GACzDiF,EAAAvH,EAAAwH,cAAA,yBAAiBrD,EAAjB,KAA+BC,IAEjCmD,EAAAvH,EAAAwH,cAAA,OAAKE,UAAU,gBACbH,EAAAvH,EAAAwH,cAAA,KAAGE,UAAU,KAAb,QAAuB7C,EAAvB,QACA0C,EAAAvH,EAAAwH,cAAA,KAAGE,UAAU,KAAb,YAA2B3C,GAC3BwC,EAAAvH,EAAAwH,cAAA,KAAGE,UAAU,KAAb,SAAwBvC,GACxBoC,EAAAvH,EAAAwH,cAAA,KAAGE,UAAU,KAAb,SAAwB5C,EAAxB,QACAyC,EAAAvH,EAAAwH,cAAA,KAAGE,UAAU,KAAb,WAA0BxC,GAC1BqC,EAAAvH,EAAAwH,cAAA,KAAGE,UAAU,KAAb,aAA4BhD,UA1D1CmE,EAAA,CAAiChB,sBCCpByB,EAAQ,SAAA1J,GAAyB,IAAtB6C,EAAsB7C,EAAtB6C,KAAMoC,EAAgBjF,EAAhBiF,IAAKC,EAAWlF,EAAXkF,KAC3ByE,EAAOzG,KAAKE,IAAI,EAAG6B,GACnB2E,EAAO1E,EAAO,GACpB,OACEyC,EAAAvH,EAAAwH,cAAA,OAAKE,UAAU,SACbH,EAAAvH,EAAAwH,cAAA,MAAIE,UAAU,MAAd,oBACAH,EAAAvH,EAAAwH,cAACiC,EAAA,eAAD,CACIhH,KAAMA,EACNiH,OAAQ,CACJC,IAAO,GACPC,MAAS,GACTC,OAAU,GACVC,KAAQ,IAEZC,OAAQ,CACJzI,KAAQ,SAEZ0I,OAAQ,CACJ1I,KAAQ,SACR2I,SAAW,EACXjH,IAAOuG,EACPpG,IAAOqG,GAEXU,MAAM,YACNC,QAAS,KACTC,UAAW,KACXC,WAAY,CACRC,OAAU,SACVC,SAAY,EACZC,YAAe,EACfC,cAAiB,GACjBC,aAAgB,GAChBC,eAAkB,SAClBC,WAAc,GAElBC,SAAU,CACNP,OAAU,OACVC,SAAY,EACZC,YAAe,EACfC,aAAgB,EAChBK,OAAU,aACVJ,cAAiB,GACjBC,eAAkB,UAEtBI,aAAa,EACbC,OAAQ,CAAC,WACTC,QAAS,GACTC,SAAS,sBACTC,eAAgB,EAChBC,eAAe,UACfC,gBAAgB,EAChBC,SAAS,IACTC,iBAAkB,GAClBC,SAAS,EACTC,gBAAiB,GACjBC,cAAe,GACfC,eAAe,MCAVC,EAvDU,SAAAhM,GAAuB,IAApB8B,EAAoB9B,EAApB8B,KAAME,EAAchC,EAAdgC,QACxB6B,EAA6C7B,EAA7C6B,MAAOJ,EAAsCzB,EAAtCyB,KAAMR,EAAgCjB,EAAhCiB,QAASK,EAAuBtB,EAAvBsB,QAASU,EAAchC,EAAdgC,UAErCxB,EAYEqB,EAZFrB,YACAuB,EAWEF,EAXFE,UACArB,EAUEmB,EAVFnB,QACA4B,EASET,EATFS,KACAC,EAQEV,EARFU,WACAC,EAOEX,EAPFW,kBACAS,EAMEpB,EANFoB,IACAC,EAKErB,EALFqB,KACAC,EAIEtB,EAJFsB,QACAG,EAGEzB,EAHFyB,OACAC,EAEE1B,EAFF0B,KACAT,EACEjB,EADFiB,SAGF,OACE6C,EAAAvH,EAAAwH,cAAA,QAAME,UAAU,oBACdH,EAAAvH,EAAAwH,cAAA,WAASE,UAAU,WACjBH,EAAAvH,EAAAwH,cAAA,UAAQE,UAAU,mBAChBH,EAAAvH,EAAAwH,cAAA,MAAIE,UAAU,MACZH,EAAAvH,EAAAwH,cAAA,OAAKE,UAAWxD,IACf9B,EAFH,YAEsBE,EAFtB,OAEmCZ,GAEnC6F,EAAAvH,EAAAwH,cAAA,QAAME,UAAU,uBAAhB,eACe/D,EADf,QAGA4D,EAAAvH,EAAAwH,cAAA,QAAME,UAAU,wBAAhB,aACavD,EADb,KAC2BC,IAG7BmD,EAAAvH,EAAAwH,cAAA,OAAKE,UAAU,gBACbH,EAAAvH,EAAAwH,cAAA,KAAGE,UAAU,KAAb,QAAuB7C,EAAvB,QACA0C,EAAAvH,EAAAwH,cAAA,KAAGE,UAAU,KAAb,YAA2B3C,GAC3BwC,EAAAvH,EAAAwH,cAAA,KAAGE,UAAU,KAAb,SAAwBvC,GACxBoC,EAAAvH,EAAAwH,cAAA,KAAGE,UAAU,KAAb,SAAwB5C,EAAxB,QACAyC,EAAAvH,EAAAwH,cAAA,KAAGE,UAAU,KAAb,WAA0BxC,GAC1BqC,EAAAvH,EAAAwH,cAAA,KAAGE,UAAU,KAAb,aAA4BhD,KAIhC6C,EAAAvH,EAAAwH,cAACqE,EAAD,CAAOpJ,KAAMmB,EAAWiB,IAAKA,EAAKC,KAAMA,IACxCyC,EAAAvH,EAAAwH,cAAA,WAASE,UAAU,WACjBH,EAAAvH,EAAAwH,cAAA,MAAIE,UAAU,eAAd,kBACCrE,EAAKW,IAAI,SAACpB,EAAKkJ,GACd,OACEvE,EAAAvH,EAAAwH,cAACuE,EAADlM,OAAAmM,OAAA,CAAa1E,IAAKwE,EAAO9I,IAAKH,EAASM,IAAKD,GAAaN,SCjDxDqJ,EAAiB,SAAArM,EAAoCmH,GAAY,IAAnCpB,EAAmC/F,EAA7C2B,SAA0BqE,EAAmBhG,EAA9B4B,UAC9C,sBAAAqE,EAAAhG,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAO4F,GAAP,IAAA3F,EAAA8H,EAAAE,EAAAzG,EAAA0G,EAAAC,EAAAC,EAAAC,EAAA,OAAAxI,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEGL,EAFH,8DAAA4F,OAEuEJ,EAFvE,KAAAI,OAE8EH,GAF9ErF,EAAAE,KAAA,EAGuBd,EAAUQ,GAHjC,OAGG8H,EAHH1H,EAAAI,KAAAwH,EAIoDF,EAAY,GAAGS,WAA9DhH,EAJLyG,EAIKzG,KAAM0G,EAJXD,EAIWC,SAAUC,EAJrBF,EAIqBE,eAAgBC,EAJrCH,EAIqCG,WAExCxC,EAASrE,EAAO,GAAAsE,OADVwC,EAAW7G,GAAQ0G,GAAYC,EACrB,MAAAtC,OAAiBuC,KACjCvB,EAAQ4B,KAAK,IAAMC,UAAS,GAAA7C,OAAIuC,EAAJ,KAAAvC,OAAkBwC,KAC9CzC,EAASjE,EAAS,KARftB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyF,GAAAzF,EAAA,SAUHuF,EAASjE,EAAStB,EAAAyF,GAAM3F,UAVrB,yBAAAE,EAAAS,SAAAd,EAAA,kBAAP,gBAAAe,GAAA,OAAA4E,EAAA3E,MAAAC,KAAAC,YAAA,ICMW8K,EAAb,SAAAhG,GAAA,SAAAgG,IAAA,IAAAC,EAAAhG,EAAAtG,OAAAuG,EAAA,EAAAvG,CAAAsB,KAAA+K,GAAA,QAAAE,EAAAhL,UAAAiL,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAApL,UAAAoL,GAAA,OAAArG,EAAAtG,OAAAwG,EAAA,EAAAxG,CAAAsB,MAAAgL,EAAAtM,OAAAyG,EAAA,EAAAzG,CAAAqM,IAAA3F,KAAArF,MAAAiL,EAAA,CAAAhL,MAAA4E,OAAAuG,MAKEG,gBALF5M,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAKoB,SAAAyM,IAAA,IAAA1D,EAAAjC,EAAA4F,EAAAC,EAAA,OAAA7M,EAAAC,EAAAM,KAAA,SAAAuM,GAAA,cAAAA,EAAArM,KAAAqM,EAAApM,MAAA,OAAAuI,EAC8C7C,EAAKe,MAA3DH,EADQiC,EACRjC,QAAS4F,EADD3D,EACC2D,UAAWC,EADZ5D,EACY4D,gBAAgB9K,EAD5BkH,EAC4BlH,gBAC9B,GACVgL,UAAUC,YACZD,UAAUC,YAAYC,mBAAtB,eAAAnH,EAAAhG,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KACE,SAAAC,EAAO+M,GAAP,IAAAC,EAAA3L,EAAAC,EAAA,OAAAzB,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACwCwM,EAASE,OADjD,OAAAD,EAAA3M,EAAAI,KACUY,EADV2L,EACU3L,SAAUC,EADpB0L,EACoB1L,UAClBoL,EAAe,CAAErL,WAAUC,aAAauF,GAF1C,wBAAAxG,EAAAS,SAAAd,MADF,gBAAAe,GAAA,OAAA4E,EAAA3E,MAAAC,KAAAC,YAAA,GAKE,WACE+E,EAAKO,SACH,CAAE0G,iBAAiB,GACnB,kBAAMT,EAAU5F,OAKtB4F,EAAU5F,GAjBI,wBAAA8F,EAAA7L,SAAA0L,MALpBvG,EAAA,OAAAtG,OAAAuH,EAAA,EAAAvH,CAAAqM,EAAAhG,GAAArG,OAAAwH,EAAA,EAAAxH,CAAAqM,EAAA,EAAA5E,IAAA,oBAAAT,MAAA,WAEI1F,KAAKsL,oBAFT,CAAAnF,IAAA,SAAAT,MAAA,WA0BW,IAAAwG,EAC6ClM,KAAK+F,MAAjDoG,EADDD,EACCC,aAAc1L,EADfyL,EACezL,QAAS2L,EADxBF,EACwBE,MAAOvL,EAD/BqL,EAC+BrL,UAC9BN,EAAS4L,EAAT5L,KACR,OACE6F,EAAAvH,EAAAwH,cAAA,OAAKE,UAAU,OACbH,EAAAvH,EAAAwH,cAAA,UAAQE,UAAU,eAChBH,EAAAvH,EAAAwH,cAAA,MAAIE,UAAU,MAAd,mBAEFH,EAAAvH,EAAAwH,cAACgG,EAAD,OACExL,GACAuF,EAAAvH,EAAAwH,cAAA,WACG5F,EAAQ6B,QAAU8J,GACjBhG,EAAAvH,EAAAwH,cAACiG,EAAD,CAAkB/L,KAAMA,EAAME,QAASA,IACxC2L,GAAShG,EAAAvH,EAAAwH,cAAA,MAAIE,UAAU,WAAd,qBAEb1F,GAAauF,EAAAvH,EAAAwH,cAAA,MAAIE,UAAU,WAAd,cACdH,EAAAvH,EAAAwH,cAAA,OAAKE,UAAU,qBACbH,EAAAvH,EAAAwH,cAAA,KAAGkG,KAAK,kCAAR,6BA3CVxB,EAAA,CAAyBrE,aAiEVC,cAAWC,YAfK,SAACd,GAAD,MAAY,CACzCqG,aAAcrG,EAAM0G,SACpB/L,QAASqF,EAAMrF,QACf2L,MAAOtG,EAAMsG,MACbvL,UAAWiF,EAAMjF,YAGe,SAAC8D,GAAD,MAAe,CAC/C6G,UAAW,SAAC5F,GAAD,OAAajB,EC/DD,SAACiB,GACxB,sBAAAnH,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAO4F,GAAP,IAAAD,EAAAtE,EAAAC,EAAA,OAAAzB,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLqF,EAAShE,GAAc,IADlBvB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAImCd,EAD1B,kDAHT,cAAAkG,EAAAtF,EAAAI,KAIKY,EAJLsE,EAIKtE,SAAUC,EAJfqE,EAIerE,UAClBsE,EAASzE,EAAe,CAAEE,WAAUC,eALjCjB,EAAAE,KAAA,GAMGqF,EAASmG,EAAe,CAAE1K,WAAUC,aAAauF,IANpD,eAAAxG,EAAAE,KAAA,GAOGqF,EAASJ,EAAW,CAAEnE,WAAUC,eAPnC,QAQHsE,EAASjE,EAAS,KARftB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyF,GAAAzF,EAAA,SAUHuF,EAASjE,EAAStB,EAAAyF,GAAM3F,UAVrB,QAYLyF,EAAShE,GAAc,IAZlB,yBAAAvB,EAAAS,SAAAd,EAAA,kBAAP,gBAAAe,GAAA,OAAArB,EAAAsB,MAAAC,KAAAC,YAAA,GD8DiCuL,CAAU5F,KAC3C6F,eAAgB,SAAAgB,EAA0B7G,GAAY,IAAnCxF,EAAmCqM,EAAnCrM,SAAUC,EAAyBoM,EAAzBpM,UAC3BsE,EElE0B,SAAAlG,EAA0BmH,GAAY,IAAnCxF,EAAmC3B,EAAnC2B,SAAUC,EAAyB5B,EAAzB4B,UACzC,sBAAAqE,EAAAhG,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAO4F,GAAP,OAAA/F,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLqF,EAAShE,GAAc,IADlBvB,EAAAC,KAAA,EAGHsF,EAASzE,EAAe,CAAEE,WAAUC,eAHjCjB,EAAAE,KAAA,EAIGqF,EAASmG,EAAe,CAAE1K,WAAUC,aAAauF,IAJpD,cAAAxG,EAAAE,KAAA,EAKGqF,EAASJ,EAAW,CAAEnE,WAAUC,eALnC,OAMHsE,EAASjE,EAAS,KANftB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyF,GAAAzF,EAAA,SAQHuF,EAASjE,EAAStB,EAAAyF,GAAM3F,UARrB,QAULyF,EAAShE,GAAc,IAVlB,yBAAAvB,EAAAS,SAAAd,EAAA,kBAAP,gBAAAe,GAAA,OAAA4E,EAAA3E,MAAAC,KAAAC,YAAA,GFiEWwL,CAAe,CAAErL,WAAUC,aAAauF,KAEnDjF,cAAe,SAACC,GAAD,OAAU+D,EAAShE,EAAcC,OAGxBgG,CAA6CmE,uCG3E1D2B,EAAe,CAC1BtM,SAAU,KACVC,UAAW,KACXE,KAAM,ICUOoM,EAPKC,0BAAgB,CAClCJ,SDD6B,WAAkC,IAAjC1G,EAAiC7F,UAAAiL,OAAA,QAAA2B,IAAA5M,UAAA,GAAAA,UAAA,GAAzByM,EAAcI,EAAW7M,UAAAiL,OAAA,EAAAjL,UAAA,QAAA4M,EAC/D,OAAQC,EAAO3M,MACb,IAAK,kBAAL,IACUC,EAAwB0M,EAAxB1M,SAAUC,EAAcyM,EAAdzM,UAClB,OAAO3B,OAAA6D,EAAA,EAAA7D,CAAA,GAAKoH,EAAZ,CAAmB1F,WAAUC,cAC/B,IAAK,WAAL,IACUE,EAASuM,EAATvM,KACR,OAAO7B,OAAA6D,EAAA,EAAA7D,CAAA,GAAKoH,EAAZ,CAAmBvF,SACrB,QACE,OAAOuF,ICPXrF,QCR4B,WAAwB,IAAvBqF,EAAuB7F,UAAAiL,OAAA,QAAA2B,IAAA5M,UAAA,GAAAA,UAAA,GAAf,GAAI6M,EAAW7M,UAAAiL,OAAA,EAAAjL,UAAA,QAAA4M,EACpD,OAAQC,EAAO3M,MACb,IAAK,cACH,OAAO2M,EAAOrM,QAChB,QACE,OAAOqF,IDIXsG,MET0B,WAAwB,IAAvBtG,EAAuB7F,UAAAiL,OAAA,QAAA2B,IAAA5M,UAAA,GAAAA,UAAA,GAAf,GAAI6M,EAAW7M,UAAAiL,OAAA,EAAAjL,UAAA,QAAA4M,EAClD,OAAQC,EAAO3M,MACb,IAAK,YACH,OAAO2M,EAAO5N,QAChB,QACE,OAAO4G,IFKXjF,UGV8B,WAA2B,IAA1BiF,EAA0B7F,UAAAiL,OAAA,QAAA2B,IAAA5M,UAAA,IAAAA,UAAA,GAAX6M,EAAW7M,UAAAiL,OAAA,EAAAjL,UAAA,QAAA4M,EACzD,OAAQC,EAAO3M,MACb,IAAK,iBACH,OAAO2M,EAAOjM,UAChB,QACE,OAAOiF,MCMPiH,EAAWC,8BAAoBC,0BAAgBC,MAC/CC,EAAQC,sBAAYT,EAAaI,GACjCM,EACJjH,EAAAvH,EAAAwH,cAACiH,EAAA,EAAD,CAAUH,MAAOA,GACf/G,EAAAvH,EAAAwH,cAACkH,EAAA,EAAD,KACEnH,EAAAvH,EAAAwH,cAACmH,EAAD,QAKNC,IAASC,OAAOL,EAAUM,SAASC,eAAe","file":"static/js/main.32837ab8.chunk.js","sourcesContent":["export const fetchData = async (url) => {\n  const response = await fetch(url);\n  if (!response.ok) {\n    const message = await response.json();\n    throw Error(message);\n  }\n  return await response.json();\n}","export const setCoordinates = ({ latitude, longitude }) => ({\n  type: 'SET_COORDINATES',\n  latitude,\n  longitude\n});\n\nexport const setCity = (city) => ({\n  type: 'SET_CITY',\n  city\n})\n\nexport const setWeather = (weather) => ({\n  type: 'SET_WEATHER',\n  weather\n});\n\nexport const setError = (message) => ({\n  type: 'SET_ERROR',\n  message\n});\n\nexport const toggleLoading = (bool) => ({\n  type: 'TOGGLE_LOADING',\n  isLoading: bool\n});","export const cleanData = (weather) => {\n  const { temperature, apparentTemperature, summary } = weather.currently;\n  const { minTemp, maxTemp } = weather.daily.data.reduce((acc, day) => {\n    acc.minTemp = Math.round(Math.min(acc.minTemp, day.temperatureLow));\n    acc.maxTemp = Math.round(Math.max(acc.maxTemp, day.temperatureHigh));\n    return acc;\n  }, { minTemp: 200, maxTemp: -200});\n  const week = getWeekForecast(weather.daily.data);\n  const firstDay = week.shift();\n  const today = {\n    ...firstDay,\n    summary,\n    temperature: Math.round(temperature),\n    feelsLike: Math.round(apparentTemperature)\n  };\n  const graphData = getGraphData(weather.hourly.data.slice(0,24));\n  return { today, week, minTemp, maxTemp, graphData };\n}\n\nexport const getWeekForecast = (data) => {\n  return data.map(forecast => {\n    const {\n      summary,\n      icon,\n      precipType,\n      precipProbability,\n      time,\n      temperatureLow,\n      temperatureHigh,\n      sunriseTime,\n      sunsetTime,\n      windSpeed,\n      windBearing,\n      humidity\n    } = forecast;\n    return {\n      summary,\n      icon,\n      precipType,\n      precipProbability: Math.round(precipProbability * 100) + '%',\n      day: (new Date(time * 1000).toDateString().slice(0,3)),\n      low: Math.round(temperatureLow),\n      high: Math.round(temperatureHigh),\n      sunrise: (new Date(sunriseTime * 1000))\n        .toLocaleTimeString('en-US').replace(/:\\d+/, ''),\n      sunset: (new Date(sunsetTime * 1000))\n        .toLocaleTimeString('en-US').replace(/:\\d+/, ''),\n      wind: Math.round(windSpeed) + ' mph ' + getWindDirection(windBearing),\n      humidity: Math.round(humidity * 100) + '%'\n    }\n  });\n}\n\nexport const getWindDirection = (windBearing) => {\n  switch (Math.round(windBearing / 22.5) % 16) {\n    case 0: return 'N';\n    case 1: return 'NNE';\n    case 2: return 'NE';\n    case 3: return 'ENE';\n    case 4: return 'E';\n    case 5: return 'ESE';\n    case 6: return 'SE';\n    case 7: return 'SSE';\n    case 8: return 'S';\n    case 9: return 'SSW';\n    case 10: return 'SW';\n    case 11: return 'WSW';\n    case 12: return 'W';\n    case 13: return 'WNW';\n    case 14: return 'NW';\n    case 15: return 'NNW';\n    default: return undefined;\n  }\n}\n\nexport const getGraphData = (hourData) => {\n  const data = hourData.map(hour => {\n    return {\n      x: (new Date(hour.time * 1000))\n        .toLocaleTimeString().replace(/:\\d+/, ''),\n      y: Math.round(hour.temperature)\n    }\n  });\n  return [{ id: \"\", data }];\n}","import { fetchData } from '../utils/api';\nimport { cleanData } from '../utils/dataCleaner';\nimport { setWeather, setError } from '../actions';\n\nexport const getWeather = ({ latitude: lat, longitude: lon }) => {\n  return async (dispatch) => {\n    try {\n      const url = `https://weekly-weather.herokuapp.com/api/v1/weather/${lat}/${lon}`;\n      const weather = await fetchData(url);\n      dispatch(setWeather(cleanData(weather)));\n      dispatch(setError(''));\n    } catch (error) {\n      dispatch(setError(error.message))      \n    }\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { forwardGeocode } from '../../thunks/forwardGeocode';\nimport PropTypes from 'prop-types';\n\nexport class Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      query: ''\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ query: event.target.value });\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const { query } = this.state;\n    const { history } = this.props;\n    this.props.forwardGeocode(query, history);\n    this.setState({ query: '' });\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit} className='Search'>\n        <input\n          value={this.state.query}\n          onChange={this.handleChange}\n          placeholder='search cities'\n          className='Search--input'\n        />\n      </form>\n    );\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => ({\n  forwardGeocode: (query, history) => dispatch(forwardGeocode(query, history))\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(Search));\n\nSearch.propTypes = {\n  forwardGeocode: PropTypes.func\n}","import { fetchData } from '../utils/api';\nimport { setCoordinates, setCity, setError, toggleLoading } from '../actions';\nimport { getWeather } from '../thunks/getWeather';\n\nexport const forwardGeocode = (userQuery, history) => {\n  return async (dispatch) => {\n    dispatch(toggleLoading(true));\n    try {\n      const query = userQuery.replace(/\\s/g, '+').replace(/,/g, '%2C');\n      const url = `https://weekly-weather.herokuapp.com/api/v1/forwardgeocode/${query}`;\n      const geocodeData = await fetchData(url);\n      const { lat: latitude, lng: longitude } = geocodeData[0].geometry;\n      const { city, locality, state_district, state_code } = geocodeData[0].components;\n      const cityName = city || locality || state_district;\n      dispatch(setCity(`${cityName}, ${state_code}`));\n      dispatch(setCoordinates({ latitude, longitude }));\n      await dispatch(getWeather({ latitude, longitude }));\n      history.push('/' + encodeURI(`${state_code}/${cityName}`));\n      dispatch(setError(''));\n    } catch (error) {\n      dispatch(setError(error.message))\n    }\n    dispatch(toggleLoading(false));\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class ForecastBar extends Component {\n  constructor() {\n    super();\n    this.state = { isExpanded: false };\n  }\n\n  handleClick = () => {\n    this.setState({ isExpanded: !this.state.isExpanded });\n  }\n\n  render() {\n    const { isExpanded } = this.state;\n    const {\n      min,\n      max,\n      day,\n      summary,\n      icon,\n      precipType,\n      precipProbability,\n      low,\n      high,\n      sunrise,\n      sunset,\n      wind,\n      humidity\n    } = this.props;\n    const barStyle = {\n      width: 100 * (high - low) / (max - min) + '%',\n      marginLeft: 100 * (low - min) / (max - min) + '%'\n    }\n    return (\n      <div className=\"ForecastBar\">\n        <div className={'ForecastBar--bar-container'}>\n          <span className={icon +' small-icon'}></span>\n          <span className='day'>{day}</span>\n          <span className='bar-container'>\n            <span className='bar' style={barStyle}>\n              <span className='low'>{low}°</span>\n              <span className='high'>{high}°</span>\n            </span>\n          </span>\n          <button className='ForecastBar--button' onClick={this.handleClick}>\n            {isExpanded ? '--' : '+'}\n          </button>\n        </div>\n        {isExpanded &&\n          <article className=\"article article--expanded\">\n            <header className='article--header'>\n              <h2 className=\"article--h2\"><div className={icon}></div>{summary}</h2>\n              <span>Chance of {precipType}: {precipProbability}</span>\n            </header>\n            <div className=\"article--div\">\n              <p className=\"p\">Low: {low}°</p>\n              <p className=\"p\">Sunrise: {sunrise}</p>\n              <p className=\"p\">Wind: {wind}</p>\n              <p className=\"p\">High: {high}°</p>\n              <p className=\"p\">Sunset: {sunset}</p>\n              <p className=\"p\">Humidity: {humidity}</p>\n            </div>\n          </article>\n        }\n      </div>\n    );\n  }\n}\n\nForecastBar.propTypes = {\n  min: PropTypes.number,\n  max: PropTypes.number,\n  day: PropTypes.string,\n  summary: PropTypes.string,\n  icon: PropTypes.string,\n  precipType: PropTypes.string,\n  precipProbability: PropTypes.string,\n  low: PropTypes.number,\n  high: PropTypes.number,\n  sunrise: PropTypes.string,\n  sunset: PropTypes.string,\n  wind: PropTypes.string,\n  humidity: PropTypes.string\n}","import React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport PropTypes from 'prop-types';\n\nexport const Graph = ({ data, low, high }) => {\n  const yMin = Math.min(0, low);\n  const yMax = high + 20;\n  return (\n    <div className='Graph'>\n      <h3 className=\"h3\">24 Hour Forecast</h3>\n      <ResponsiveLine\n          data={data}\n          margin={{\n              \"top\": 16,\n              \"right\": 24,\n              \"bottom\": 64,\n              \"left\": 48\n          }}\n          xScale={{\n              \"type\": \"point\"\n          }}\n          yScale={{\n              \"type\": \"linear\",\n              \"stacked\": true,\n              \"min\": yMin,\n              \"max\": yMax\n          }}\n          curve=\"monotoneX\"\n          axisTop={null}\n          axisRight={null}\n          axisBottom={{\n              \"orient\": \"bottom\",\n              \"tickSize\": 5,\n              \"tickPadding\": 5,\n              \"tickRotation\": -60,\n              \"legendOffset\": 36,\n              \"legendPosition\": \"middle\",\n              \"tickValues\": 0\n          }}\n          axisLeft={{\n              \"orient\": \"left\",\n              \"tickSize\": 5,\n              \"tickPadding\": 5,\n              \"tickRotation\": 0,\n              \"legend\": \"Fahrenheit\",\n              \"legendOffset\": -32,\n              \"legendPosition\": \"middle\"\n          }}\n          enableGridX={false}\n          colors={['#4285f4']}\n          dotSize={10}\n          dotColor=\"inherit:darker(0.3)\"\n          dotBorderWidth={2}\n          dotBorderColor=\"#ffffff\"\n          enableDotLabel={true}\n          dotLabel=\"y\"\n          dotLabelYOffset={-12}\n          animate={true}\n          motionStiffness={90}\n          motionDamping={15}\n          isInteractive={false}\n      />\n    </div>\n  )\n}\n\nGraph.propTypes = {\n  data: PropTypes.array,\n  low: PropTypes.number,\n  high: PropTypes.number,\n}","import React from 'react';\nimport { ForecastBar } from '../ForecastBar/ForecastBar';\nimport { Graph } from '../Graph/Graph';\nimport PropTypes from 'prop-types';\n\nconst WeatherContainer = ({ city, weather }) => {\n  const { today, week, minTemp, maxTemp, graphData } = weather;\n  const {\n    temperature,\n    feelsLike,\n    summary,\n    icon,\n    precipType,\n    precipProbability,\n    low,\n    high,\n    sunrise,\n    sunset,\n    wind,\n    humidity\n  } = today;\n\n  return (\n    <main className=\"WeatherContainer\">\n      <article className=\"article\">\n        <header className='article--header'>\n          <h2 className=\"h2\">\n            <div className={icon}></div>\n            {temperature}° and {summary} in {city}\n          </h2>\n          <span className=\"header--span--feels\">\n            Feels like: {feelsLike}°\n          </span>\n          <span className=\"header--span--precip\">\n            Chance of {precipType}: {precipProbability}\n          </span>\n        </header>\n        <div className=\"article--div\">\n          <p className=\"p\">Low: {low}°</p>\n          <p className=\"p\">Sunrise: {sunrise}</p>\n          <p className=\"p\">Wind: {wind}</p>\n          <p className=\"p\">High: {high}°</p>\n          <p className=\"p\">Sunset: {sunset}</p>\n          <p className=\"p\">Humidity: {humidity}</p>\n\n        </div>\n      </article>\n      <Graph data={graphData} low={low} high={high} />\n      <section className=\"section\">\n        <h3 className=\"section--h3\">7 Day Forecast</h3>\n        {week.map((day, index) => {\n          return (\n            <ForecastBar key={index} min={minTemp} max={maxTemp} {...day} />\n          );\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default WeatherContainer;\n\nWeatherContainer.propTypes = {\n  city: PropTypes.string,\n  weather: PropTypes.object\n}","import { fetchData } from '../utils/api';\nimport { setCity, setError } from '../actions';\n\nexport const reverseGeocode = ({ latitude: lat, longitude: lon }, history) => {\n  return async (dispatch) => {\n    try {\n      const url = `https://weekly-weather.herokuapp.com/api/v1/reversegeocode/${lat}/${lon}`;\n      const geocodeData = await fetchData(url);\n      const { city, locality, state_district, state_code } = geocodeData[0].components;\n      const cityName = city || locality || state_district;\n      dispatch(setCity(`${cityName}, ${state_code}`));\n      history.push('/' + encodeURI(`${state_code}/${cityName}`));\n      dispatch(setError(''));\n    } catch (error) {\n      dispatch(setError(error.message))\n    }\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Search from '../Search/Search';\nimport WeatherContainer from '../../components/WeatherContainer/WeatherContainer';\nimport { getUserIP } from '../../thunks/getUserIP';\nimport { getGeolocation } from '../../thunks/getGeolocation';\nimport { toggleLoading } from '../../actions';\nimport PropTypes from 'prop-types';\n\nexport class App extends Component {\n  componentDidMount() {\n    this.getUserLocation();\n  }\n\n  getUserLocation = async () => {\n    const { history, getUserIP, getGeolocation, toggleLoading } = this.props;\n    toggleLoading(true);\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        async (position) => {\n          const { latitude, longitude } = await position.coords;\n          getGeolocation({ latitude, longitude }, history);\n        },\n        () => {\n          this.setState(\n            { locationGranted: false },\n            () => getUserIP(history)\n          );\n        }\n      );\n    } else {\n      getUserIP(history);\n    }\n  }\n\n  render() {\n    const { userLocation, weather, error, isLoading } = this.props;\n    const { city } = userLocation;\n    return (\n      <div className=\"App\">\n        <header className=\"App--header\">\n          <h1 className=\"h1\">Weekly Weather</h1>\n        </header>\n        <Search />\n        {!isLoading && \n          <div>\n            {weather.today && !error &&\n              <WeatherContainer city={city} weather={weather} />}\n            {error && <h2 className=\"App--h2\">No results found</h2>}\n          </div>}\n        {isLoading && <h2 className=\"App--h2\">Loading...</h2>}\n        <div className=\"App--div--darksky\">\n          <a href=\"https://darksky.net/poweredby/\">Powered by Dark Sky</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  userLocation: state.location,\n  weather: state.weather,\n  error: state.error,\n  isLoading: state.isLoading\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  getUserIP: (history) => dispatch(getUserIP(history)),\n  getGeolocation: ({ latitude, longitude }, history) => {\n    dispatch(getGeolocation({ latitude, longitude }, history))\n  },\n  toggleLoading: (bool) => dispatch(toggleLoading(bool))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n\nApp.propTypes = {\n  userLocation: PropTypes.object,\n  weather: PropTypes.object,\n  error: PropTypes.string,\n  isLoading: PropTypes.bool,\n  getUserIP: PropTypes.func,\n  getGeolocation: PropTypes.func,\n  toggleLoading: PropTypes.func\n}","import { fetchData } from '../utils/api';\nimport { setCoordinates, setError, toggleLoading } from '../actions';\nimport { reverseGeocode } from '../thunks/reverseGeocode';\nimport { getWeather } from '../thunks/getWeather';\n\nexport const getUserIP = (history) => {\n  return async (dispatch) => {\n    dispatch(toggleLoading(true));\n    try{\n      const url = 'https://weekly-weather.herokuapp.com/api/v1/ip';\n      const { latitude, longitude } = await fetchData(url);\n      dispatch(setCoordinates({ latitude, longitude }));\n      await dispatch(reverseGeocode({ latitude, longitude }, history));\n      await dispatch(getWeather({ latitude, longitude }));\n      dispatch(setError(''));\n    } catch (error) {\n      dispatch(setError(error.message));\n    }\n    dispatch(toggleLoading(false));\n  }\n}","import { setCoordinates, setError, toggleLoading } from '../actions';\nimport { reverseGeocode } from './reverseGeocode';\nimport { getWeather } from './getWeather';\n\nexport const getGeolocation = ({ latitude, longitude }, history) => {\n  return async (dispatch) => {\n    dispatch(toggleLoading(true));\n    try{\n      dispatch(setCoordinates({ latitude, longitude }));\n      await dispatch(reverseGeocode({ latitude, longitude }, history));\n      await dispatch(getWeather({ latitude, longitude }));\n      dispatch(setError(''));\n    } catch (error) {\n      dispatch(setError(error.message));\n    }\n    dispatch(toggleLoading(false));\n  }\n}","export const initialState = {\n  latitude: null,\n  longitude: null,\n  city: ''\n}\n\nexport const locationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_COORDINATES':\n      const { latitude, longitude } = action;\n      return { ...state, latitude, longitude };\n    case 'SET_CITY':\n      const { city } = action;\n      return { ...state, city };    \n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport { locationReducer } from './locationReducer';\nimport { weatherReducer } from './weatherReducer';\nimport { errorReducer } from './errorReducer';\nimport { isLoadingReducer } from './isLoadingReducer';\n\nconst rootReducer = combineReducers({\n  location: locationReducer,\n  weather: weatherReducer,\n  error: errorReducer,\n  isLoading: isLoadingReducer\n});\n\nexport default rootReducer;","export const weatherReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_WEATHER':\n      return action.weather\n    default:\n      return state;\n  }\n}","export const errorReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_ERROR':\n      return action.message\n    default:\n      return state;\n  }\n}","export const isLoadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'TOGGLE_LOADING':\n      return action.isLoading;\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss'\nimport App from './containers/App/App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst devTools = composeWithDevTools(applyMiddleware(thunk));\nconst store = createStore(rootReducer, devTools);\nconst provider = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(provider, document.getElementById('root'));"],"sourceRoot":""}